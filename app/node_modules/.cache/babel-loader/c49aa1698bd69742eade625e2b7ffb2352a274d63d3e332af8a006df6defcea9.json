{"ast":null,"code":"var _jsxFileName = \"/home/dante/Escritorio/GitHub/Taller II/backoffice-web/app/src/routes/PrivateRoute.js\";\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  //const token = localStorage.getItem('access_token'); // O donde hayas almacenado el token\n\n  // Verificar si el token existe y es v치lido\n  //const isAuthenticated = token && isTokenValid(token); // Implementa esta funci칩n para validar el token\n\n  const isAuthenticated = true;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = PrivateRoute;\nconst Private = Component => {\n  //const access_token = localStorage.getItem(\"accesToken\")\n  //const auth = access_token == \"true\"? true : false; //your logic\n\n  const auth = false; //your logic\n  console.log(auth);\n  return auth ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 19\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 35\n  }, this);\n};\n_c2 = Private;\nexport default PrivateRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"Private\");","map":{"version":3,"names":["Route","Navigate","jsxDEV","_jsxDEV","PrivateRoute","_ref","component","Component","rest","isAuthenticated","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","Private","auth","console","log","_c2","$RefreshReg$"],"sources":["/home/dante/Escritorio/GitHub/Taller II/backoffice-web/app/src/routes/PrivateRoute.js"],"sourcesContent":["import { Route, Navigate } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  //const token = localStorage.getItem('access_token'); // O donde hayas almacenado el token\n\n  // Verificar si el token existe y es v치lido\n  //const isAuthenticated = token && isTokenValid(token); // Implementa esta funci칩n para validar el token\n\n  const isAuthenticated = true\n  return (\n    <Route {...rest} render={props => (\n      isAuthenticated ? <Component {...props} /> : <Navigate to=\"/\" />\n    )} />\n  );\n}\n\nconst Private = (Component) => {\n    //const access_token = localStorage.getItem(\"accesToken\")\n    //const auth = access_token == \"true\"? true : false; //your logic\n    \n    \n    const auth = false; //your logic\n    console.log(auth)\n    return auth ? <Component /> : <Navigate to=\"/login\" />\n}\n\nexport default PrivateRoute"],"mappings":";AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGC,IAAA,IAAuC;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAAH,IAAA;EACrD;;EAEA;EACA;;EAEA,MAAMI,eAAe,GAAG,IAAI;EAC5B,oBACEN,OAAA,CAACH,KAAK;IAAA,GAAKQ,IAAI;IAAEE,MAAM,EAAEC,KAAK,IAC5BF,eAAe,gBAAGN,OAAA,CAACI,SAAS;MAAA,GAAKI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAAGZ,OAAA,CAACF,QAAQ;MAACe,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC7D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAET,CAAC;AAAAE,EAAA,GAZKb,YAAY;AAclB,MAAMc,OAAO,GAAIX,SAAS,IAAK;EAC3B;EACA;;EAGA,MAAMY,IAAI,GAAG,KAAK,CAAC,CAAC;EACpBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,OAAOA,IAAI,gBAAGhB,OAAA,CAACI,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG,gBAAGZ,OAAA,CAACF,QAAQ;IAACe,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC1D,CAAC;AAAAO,GAAA,GARKJ,OAAO;AAUb,eAAed,YAAY;AAAA,IAAAa,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}